<div class="tried-everything-section" style="background-color: {{ section.settings.background_color | default: '#ffffff' }};">
  {% for block in section.blocks %}
    {% if block.type == 'tried_everything' %}
      <!-- Tried Everything Block -->
      <style>
        .tried-everything-{{ block.id }} {
          margin-top: {{ block.settings.margin_top }}px;
          margin-bottom: {{ block.settings.margin_bottom }}px;
        }
        .tried-everything-{{ block.id }} .container {
          max-width: {{ block.settings.container_width }}px;
          margin: 0 auto;
          padding: {{ block.settings.section_padding }}px 20px;
        }

        .tried-everything-{{ block.id }} .content-wrapper {
          display: grid;
          grid-template-columns: 1fr 1fr;
          gap: {{ block.settings.content_gap }}px;
          align-items: center;
        }

        .tried-everything-{{ block.id }} .text-content h2 {
          font-size: {{ section.settings.heading_font_size }}px;
          color: {{ section.settings.heading_color }};
          margin-bottom: {{ block.settings.heading_margin_bottom }}px;
          line-height: 1.2;
          font-weight: {{ block.settings.heading_weight }};
        }

        .tried-everything-{{ block.id }} .items-grid {
          display: grid;
          grid-template-columns: repeat(2, 1fr);
          gap: {{ block.settings.items_gap }}px;
        }

        .tried-everything-{{ block.id }} .item {
          display: flex;
          align-items: center;
          gap: 8px;
        }

        .tried-everything-{{ block.id }} .bullet {
          width: {{ block.settings.bullet_size }}px;
          height: {{ block.settings.bullet_size }}px;
          background-color: {{ section.settings.point_color }};
          border-radius: 50%;
          flex-shrink: 0;
        }

        .tried-everything-{{ block.id }} .item-text {
          font-size: {{ section.settings.text_font_size }}px;
          color: {{ section.settings.text_color }};
          font-weight: {{ block.settings.item_text_weight }};
          line-height: 1.4;
        }

        .tried-everything-{{ block.id }} .image-content {
          position: relative;
        }

        .tried-everything-{{ block.id }} .image-content img {
          width: 100%;
          height: auto;
          display: block;
          border-radius: {{ block.settings.image_border_radius }}px;
        }

        .tried-everything-{{ block.id }} .x-mark {
          position: absolute;
          width: {{ block.settings.x_mark_size }}px;
          height: {{ block.settings.x_mark_size }}px;
        }

        .tried-everything-{{ block.id }} .x-mark::before,
        .tried-everything-{{ block.id }} .x-mark::after {
          content: '';
          position: absolute;
          width: 100%;
          height: {{ block.settings.x_mark_thickness }}px;
          background-color: {{ block.settings.x_mark_color }};
          top: 50%;
          left: 0;
        }

        .tried-everything-{{ block.id }} .x-mark::before {
          transform: translateY(-50%) rotate(45deg);
        }

        .tried-everything-{{ block.id }} .x-mark::after {
          transform: translateY(-50%) rotate(-45deg);
        }

        @media (max-width: 768px) {
          .tried-everything-{{ block.id }} .content-wrapper {
            grid-template-columns: 1fr;
            gap: 30px;
          }

          .tried-everything-{{ block.id }} .text-content h2 {
            font-size: {{ section.settings.heading_font_size | minus: 8 }}px;
          }

          .tried-everything-{{ block.id }} .items-grid {
            grid-template-columns: 1fr;
          }
        }
      </style>

      <div class="tried-everything-{{ block.id }}" {{ block.shopify_attributes }}>
        <div class="container">
          <div class="content-wrapper">
            <div class="text-content">
              {% if block.settings.heading != blank %}
                <h2>{{ block.settings.heading }}</h2>
              {% endif %}

              <div class="items-grid">
                {% for i in (1..8) %}
                  {% assign item_setting = 'item_' | append: i %}
                  {% if block.settings[item_setting] != blank %}
                    <div class="item">
                      <span class="bullet"></span>
                      <span class="item-text">{{ block.settings[item_setting] }}</span>
                    </div>
                  {% endif %}
                {% endfor %}
              </div>
            </div>

            <div class="image-content">
              {% if block.settings.main_image != blank %}
                <img 
                  src="{{ block.settings.main_image | image_url: width: 800 }}" 
                  alt="{{ block.settings.heading | default: 'Tried Everything' }}" 
                  loading="lazy"
                  width="800"
                  height="600"
                >
                
                {% if block.settings.show_x_marks %}
                  <span class="x-mark" style="top: {{ block.settings.x_mark_1_top }}%; left: {{ block.settings.x_mark_1_left }}%;"></span>
                  <span class="x-mark" style="top: {{ block.settings.x_mark_2_top }}%; right: {{ block.settings.x_mark_2_right }}%;"></span>
                  <span class="x-mark" style="top: {{ block.settings.x_mark_3_top }}%; left: {{ block.settings.x_mark_3_left }}%;"></span>
                  <span class="x-mark" style="bottom: {{ block.settings.x_mark_4_bottom }}%; right: {{ block.settings.x_mark_4_right }}%;"></span>
                {% endif %}
              {% else %}
                <div style="background: #f0f0f0; padding: 60px 20px; text-align: center; border-radius: 8px;">
                  <p style="color: #999;">Upload an image</p>
                </div>
              {% endif %}
            </div>
          </div>
        </div>
      </div>

    {% elsif block.type == 'content_block' %}
      <!-- Content Block -->
      <style>
        .content-block-{{ block.id }} {
          margin-top: {{ block.settings.content_margin_top }}px;
          margin-bottom: {{ block.settings.content_margin_bottom }}px;
          color: {{ block.settings.content_color }};
          font-size: {{ block.settings.content_font_size }}px;
          text-align: {{ block.settings.content_alignment }};
          max-width: 1170px;
          margin-left: auto;
          margin-right: auto;
          padding: 0 20px;
        }
    
        .content-block-{{ block.id }} ul {
          padding: 0 0 0 20px;
        } 
        
        .content-block-{{ block.id }} p {
          margin: 0;
          line-height: 1.6;
        }
      </style>

      <div class="content-block-{{ block.id }}" {{ block.shopify_attributes }}>
        {{ block.settings.content }}
      </div>

    {% elsif block.type == 'organ_supplement' %}
      <!-- Organ Supplement Block -->
      <style>
        .organ-supplement-{{ block.id }} {
          margin-top: 0px;
          margin-bottom: 0px;
          background-color: rgb(255 243 247);
          border: 30px solid #ed1f81;
          border-radius: 8px;
          border-image-source: url('https://cdn.shopify.com/s/files/1/0727/8169/3085/files/food_benefit_bg.webp?v=1759143766');
          padding: 20px;
          max-width: 1170px;
          border-image-slice: 30;
          padding: 0 0 10px;
          margin-left: auto;
          margin-right: auto;
          transition: all 0.3s ease;
          cursor: pointer;
        }

        .organ-supplement-{{ block.id }} .organ-header {
          margin-bottom: 30px;
        }

        .organ-supplement-{{ block.id }} .organ-title {
          {% if block.settings.use_section_colors %}
            color: {{ section.settings.heading_color }};
          {% else %}
            color: {{ block.settings.custom_title_color }};
          {% endif %}
          font-size: {{ block.settings.organ_title_size }}px;
          font-weight: bold;
          margin: 20px 0;
        }

        .organ-supplement-{{ block.id }} .organ-details {
          display: grid;
          grid-template-columns: 1fr 1fr;
          gap: 40px;
          align-items: start;
          margin-top: 30px;
        }

        .organ-supplement-{{ block.id }} .image-text-flex-container {
          display: flex;
          flex-direction: column;
        }

        .organ-supplement-{{ block.id }} .image-text-item {
          display: flex;
          align-items: center;
          gap: 15px;
          padding: 2px 12px;
          border-radius: 8px;
          transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .organ-supplement-{{ block.id }} .organ-point {
          display: flex;
          align-items: flex-start;
          gap: 12px;
          font-size: 20px;
          line-height: 1.5;
          color: #2a2a2a;
          font-weight: 300;
        }

        .organ-supplement-{{ block.id }} .organ-point .icon {
          flex-shrink: 0;
          margin-top: 2px;
          color: white;
          background: #ff699f;
          padding: 3px;
          border-radius: 100%;
          height: 19px;
          width: 19px;
          display: flex;
          align-items: center;
          justify-content: center;
        }

        .organ-supplement-{{ block.id }} .organ-icon {
          display: flex;
          justify-content: center;
          align-items: center;
        }

        .organ-supplement-{{ block.id }} .organ-icon img {
          max-width: 500px;
          height: auto;
          object-fit: contain;
        }

        @media (max-width: 768px) {
          .organ-supplement-{{ block.id }} .organ-details {
            grid-template-columns: 1fr;
            gap: 30px;
          }
          
          .organ-supplement-{{ block.id }} .image-text-item {
            gap: 12px;
            padding: 10px;
          }
          
          .organ-supplement-{{ block.id }} .organ-point {
            font-size: 16px;
          }
        }
      </style>

      {% if block.settings.organ_link != blank %}
        <a href="{{ block.settings.organ_link }}" class="organ-link" style="text-decoration: none; color: inherit; display: block;">
      {% endif %}

      <div class="organ-supplement-{{ block.id }}" {{ block.shopify_attributes }}>
        <div class="organ-header">
          <h3 class="organ-title">{{ block.settings.organ_name }}</h3>
        </div>
        
        <div class="organ-details">
          <div class="image-text-flex-container">
            {% for i in (1..5) %}
              {% assign text_setting = 'text_' | append: i %}
              {% if block.settings[text_setting] != blank %}
                <div class="image-text-item">
                  <div class="text-container">
                    <div class="organ-point">
                      <span class="icon">
                        <svg width="13" height="12" viewBox="0 0 16 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M1 5.5L5.5 10L15 1" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                      </span>
                      {{ block.settings[text_setting] }}
                    </div>
                  </div>
                </div>
              {% endif %}
            {% endfor %}
          </div>

          <div class="organ-icon">
            {% if block.settings.organ_icon != blank %}
              <img src="{{ block.settings.organ_icon | img_url: '300x300' }}" alt="{{ block.settings.organ_name }}" loading="lazy" width="300" height="300">
            {% else %}
              <div style="background: #f0f0f0; padding: 40px; text-align: center; border-radius: 8px;">
                <p style="color: #999;">Upload organ icon</p>
              </div>
            {% endif %}
          </div>
        </div>
      </div>

      {% if block.settings.organ_link != blank %}
        </a>
      {% endif %}

    {% elsif block.type == 'problem_section' %}
      <!-- Problem Section Block -->
      <style>
        .problem-section-{{ block.id }} {
          display: flex;
          justify-content: space-between;
          align-items: center;
          padding: 40px 20px;
          max-width: 1170px;
          margin: 0 auto;
        }

        .problem-content-wrapper-{{ block.id }} {
          display: flex;
          gap: 40px;
          flex-wrap: wrap;
          width: 100%;
        }

        .text-side-{{ block.id }} {
          flex: 1 1 50%;
          min-width: 300px;
        }

        .text-side-{{ block.id }} h2 {
          font-size: {{ block.settings.problem_font_size }}px;
          color: {{ block.settings.problem_font_color }};
          margin-bottom: 20px;
        }

        .text-side-{{ block.id }} p {
          font-size: {{ block.settings.text_font_size_one }}px;
          color: #333;
          line-height: 1.6;
          margin-bottom: 15px;
        }

        .image-side-{{ block.id }} {
          flex: 1 1 40%;
        }

        .image-side-{{ block.id }} img {
          width: 100%;
          border-radius: 10px;
          border: 3px solid purple;
        }

        @media (max-width: 768px) {
          .problem-section-{{ block.id }} {
            padding: 20px;
          }
          
          .problem-content-wrapper-{{ block.id }} {
            flex-direction: column;
            gap: 30px;
          }
        }
      </style>

      <div class="problem-section-{{ block.id }}" {{ block.shopify_attributes }}>
        <div class="problem-content-wrapper-{{ block.id }}">
          <div class="text-side-{{ block.id }}">
            {% if block.settings.heading_text != blank %}
              <h2>{{ block.settings.heading_text }}</h2>
            {% endif %}
            
            {% if block.settings.paragraph_text_1 != blank %}
              <p>{{ block.settings.paragraph_text_1 }}</p>
            {% endif %}
            
            {% if block.settings.paragraph_text_2 != blank %}
              <p>{{ block.settings.paragraph_text_2 }}</p>
            {% endif %}
            
            {% if block.settings.bold_text != blank %}
              <p><strong>{{ block.settings.bold_text }}</strong>{{ block.settings.after_bold_text }}</p>
            {% endif %}
          </div>

          <div class="image-side-{{ block.id }}">
            {% if block.settings.image != blank %}
              <img src="{{ block.settings.image | img_url: '600x600' }}" alt="Problem Image" loading="lazy" />
            {% else %}
              <div style="background: #f0f0f0; padding: 60px 20px; text-align: center; border-radius: 10px; border: 3px solid purple;">
                <p style="color: #999;">Upload problem image</p>
              </div>
            {% endif %}
          </div>
        </div>
      </div>

    {% elsif block.type == 'single_capsule' %}
      <!-- Single Capsule Block -->
      <style>
        .single-capsule-{{ block.id }} {
          background-color: {{ block.settings.background_color }};
          color: {{ block.settings.text_color }};
          margin-top: {{ block.settings.margin_top }}px;
          margin-bottom: {{ block.settings.margin_bottom }}px;
          padding: {{ block.settings.padding }}px 20px;
        }

        .single-capsule-{{ block.id }} .capsule-container {
          max-width: 1170px;
          display: flex;
          gap: 40px;
          margin: 0 auto;
        }

        .single-capsule-{{ block.id }} .main-heading {
          display: flex;
          gap: 10px;
          border-bottom: 1px solid #ffc4c4;
          border-top: 1px solid #ffc4c4;
          padding: 15px 0;
          margin-bottom: 20px;
        }

        .single-capsule-{{ block.id }} .capsule-highlight strong {
          color: {{ block.settings.highlight_color }};
        }

        .single-capsule-{{ block.id }} .capsul-image img {
          width: 100%;
          border-radius: 10px;
          border: 5px solid #2f0147;
        }

        .single-capsule-{{ block.id }} .main-heading div {
          font-size: {{ block.settings.main_heading_size }}px;
          font-weight: bold;
          line-height: 1.2;
        }

        .single-capsule-{{ block.id }} .subheading {
          font-size: {{ block.settings.subheading_size }}px;
        }

        .single-capsule-{{ block.id }} .question-text {
          font-size: {{ block.settings.question_size }}px;
          margin-bottom: 10px;
        }

        .single-capsule-{{ block.id }} .answer-text {
          font-size: {{ block.settings.question_size | minus: 4 }}px;
        }

        @media (max-width: 768px) {
          .single-capsule-{{ block.id }} .capsule-container {
            flex-direction: column;
          }
        }
      </style>

      <div class="single-capsule-{{ block.id }}" {{ block.shopify_attributes }}>
        <div class="capsule-container">
          <div class="capsule-content">
            <div class="main-heading">
              {% if block.settings.image_heading != blank %}
                <div class="heading-image">
                  <img src="{{ block.settings.image_heading | img_url: '100x100' }}" alt="Heading icon" loading="lazy" />
                </div>
              {% endif %}
              <div class="heading-box">
                {% if block.settings.main_heading_line1 != blank %}
                  <div>{{ block.settings.main_heading_line1 }}</div>
                {% endif %}
                {% if block.settings.main_heading_line2 != blank %}
                  <div class="capsule-highlight">{{ block.settings.main_heading_line2 }}</div>
                {% endif %}
              </div>
            </div>
            
            {% if block.settings.subheading != blank %}
              <div class="subheading">{{ block.settings.subheading }}</div>
            {% endif %}
            
            <div class="question-section">
              {% if block.settings.question_text != blank %}
                <div class="question-text">{{ block.settings.question_text }}</div>
              {% endif %}
              
              {% if block.settings.answer_text != blank %}
                <div class="answer-text">{{ block.settings.answer_text }}</div>
              {% endif %}
            </div>
          </div>
          
          <div class="capsul-image">
            {% if block.settings.image_capsul != blank %}
              <img src="{{ block.settings.image_capsul | img_url: '600x600' }}" alt="Capsule image" loading="lazy" />
            {% endif %}
          </div>
        </div>
      </div>

    {% elsif block.type == 'superfoods_block' %}
      <!-- Nutrient Card Block -->
      <style>
        .superfoods-section {
          text-align: center;
          padding: 50px 20px;
          max-width: 1200px;
          margin: 0 auto;
        }
        
        .superfood-heading h2 {
          font-size: 28px;
          font-weight: 700;
          margin-bottom: 10px;
          color: #111;
        }
        
        .superfood-heading .subtitle {
          font-size: 16px;
          color: #555;
          margin-bottom: 30px;
        }
        
        .nutrient-rich {
          display: grid;
          grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
          gap: 20px;
          margin-top: 30px;
        }
        
        .nutrient-card {
          background: #fff;
          border-radius: 16px;
          padding: 20px;
          box-shadow: 0 4px 12px rgba(0,0,0,0.1);
          transition: 0.3s;
        }
        
        .nutrient-card:hover {
          transform: translateY(-5px);
        }
        
        .nutrient-title {
          font-size: 18px;
          font-weight: bold;
          margin-bottom: 15px;
        }
        
        .nutrient-images {
          display: flex;
          justify-content: center;
          align-items: center;
          gap: 10px;
          margin-bottom: 15px;
        }
        
        .nutrient-images img {
          max-width: 80px;
          height: auto;
        }
        
        .vs {
          font-weight: bold;
          font-size: 16px;
          color: #e6007a;
        }
        
        .nutri-bottomline {
          font-size: 14px;
          color: #e6007a;
          font-weight: 500;
        }
      </style>

     <section class="superfoods-section">
  <div class="superfood-heading">
    {% if section.settings.food_heading != blank %}
      <h2>{{ section.settings.food_heading }}</h2>
    {% endif %}
    {% if section.settings.food_subtitle != blank %}
      <div class="subtitle">{{ section.settings.food_subtitle }}</div>
    {% endif %}
  </div>

  <div class="nutrient-rich">
    {% for block in section.blocks %}
      <div class="nutrient-card" {{ block.shopify_attributes }}>
        <div class="nutrient-item">
          <div class="nutrient-title">{{ block.settings.nutrient_heading }}</div>
        </div>

        <div class="nutrient-images">
          {% if block.settings.nutrient_image != blank %}
            <img src="{{ block.settings.nutrient_image | img_url: '300x300' }}" 
                 loading="lazy" 
                 alt="{{ block.settings.nutrient_heading }}">
          {% endif %}

          {% if block.settings.vs_image != blank %}
            <span class="vs">VS</span>
            <img src="{{ block.settings.vs_image | img_url: '300x300' }}" 
                 loading="lazy" 
                 alt="Comparison">
          {% endif %}
        </div>

        {% if block.settings.nutri_bottomline != blank %}
          <div class="nutri-bottomline">{{ block.settings.nutri_bottomline }}</div>
        {% endif %}
      </div>
    {% endfor %}
  </div>
</section>
 {% elsif block.type == 'superfoods_section' %}
  <section class="primal-queen-section">
    <div class="container">
  <div class="combined-container">
    
    {%- comment -%} ===== ORGAN SECTION ===== {%- endcomment -%}
    {% assign block = section.blocks[0] %}
    {% if block.settings.main_heading != blank %}
      <h2 class="organ-heading">{{ block.settings.main_heading }}</h2>
    {% endif %}
    {% if block.settings.sub_heading != blank %}
      <p class="organ-subheading">{{ block.settings.sub_heading }}</p>
    {% endif %}

    <div class="organ-items">
      {% for i in (1..6) %}
        {% assign organ_image_key = 'organ_image_' | append: i %}
        {% assign organ_text_key = 'organ_text_' | append: i %}

        {% assign organ_image = block.settings[organ_image_key] %}
        {% assign organ_text = block.settings[organ_text_key] %}

        {% if organ_image != blank and organ_text != blank %}
        <div class="organ-item">
          <div class="organ-imgs-single">
            <img src="{{ organ_image | img_url: 'master' }}" alt="Organ Image">
          </div>
          <p class="organ-desc">{{ organ_text }}</p>
        </div>
        {% endif %}
      {% endfor %}
    </div>

    {% if block.settings.cta_label != blank and block.settings.cta_link != blank %}
  <div class="btn_wrapper_wrapper">
    <div class="btn_wrapper">
      <a href="{{ block.settings.cta_link }}" class="cta-btn ai-primal-queen-hero-button-{{ ai_gen_id }}">
        {% if block.settings.show_crown_button %}
          <img src="{{ block.settings.button_crown_icon | image_url }}" class="button_crown_icon" width="20px" height="20px" style="width:20px;">
        {% endif %}
        {{ block.settings.cta_label }}
      </a>
    </div>  
  </div>    
{% endif %}

    {%- comment -%} ===== PROMISE SECTION ===== {%- endcomment -%}
    {% if block.settings.promise_heading != blank %}
      <h2 class="promise-heading">{{ block.settings.promise_heading }}</h2>
    {% endif %}

    <div class="promise-items">
      {% for i in (1..6) %}
        {% assign icon_key = 'icon_' | append: i %}
        {% assign icon_text_key = 'icon_text_' | append: i %}
        {% assign icon_image = block.settings[icon_key] %}
        {% assign icon_text = block.settings[icon_text_key] %}
        {% if icon_image != blank and icon_text != blank %}
        <div class="promise-item">
          <img src="{{ icon_image | img_url: '100x100' }}" alt="{{ icon_text }}">
          <span class="item-text">{{ icon_text }}</span>
        </div>
        {% endif %}
      {% endfor %}
    </div>
</div>
  </div>
</section>


<style>
    
.primal-queen-section {
  padding: 40px 20px;
  text-align: center;
  position: relative;
}
.primal-queen-section:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url('https://cdn.shopify.com/s/files/1/0727/8169/3085/files/s2_box_before_color_1588x1176_8314d1fd-d54b-4d16-9fc6-f7e3f8c892b1.webp?v=1759217107');
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  z-index: -1;    /* Make sure content stays above the background */
  border-radius: 10px; /* Optional: matches section styling */
}

.primal-queen-section .container {
    max-width: 1170px;
    margin: 0 auto;
    padding: 40px 20px;
}

/* ===== ORGAN SECTION ===== */
.organ-heading {
      font-size: 52px;
    font-weight: 700;
    color: #2f0147;
    margin-bottom: 15px;
    line-height: 1.1;
}
.organ-heading strong {
    color: #fa679c;
}
.organ-subheading {
  font-size: 25px;
  color: #2f0147;
  margin-bottom: 30px;
}
.organ-items {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: 20px;
  justify-content: center;
}
.organ-item {
  border: 2px solid #2f0147;
  border-radius: 10px;
  padding: 0;
  background: #fff;
}
.organ-imgs-single img {
  width: 100%;
  height: auto;
  object-fit: contain;
  border-radius: 10px;
  margin-bottom: 10px;
}
.organ-desc {
      padding: 10px 0 14px;
    background-color: #ff699f;
    color: #fff;
    font-size: 17px;
    border-bottom-left-radius: 8px;
    border-bottom-right-radius: 8px;
    font-weight: 400;
    line-height: 1;
    margin-top: 0;
}
.cta-wrapper {
  margin: 20px 0;
}
.cta-btn {
  background: #00c853;
  color: #fff;
  font-weight: bold;
  padding: 12px 20px;
  border-radius: 6px;
  text-decoration: none;
  display: inline-block;
}
.cta-btn:hover {
  background: #009624;
}

/* ===== PROMISE SECTION ===== */
.promise-heading {
  font-size: 24px;
  font-weight: 700;
  margin: 30px 0;
  color: #3b0a55;
}
.promise-items {
  display: flex;
  justify-content: center;
  gap: 30px;
  flex-wrap: wrap;
}
.promise-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  max-width: 100px;
}
.promise-item img {
  width: 60px;
  height: 60px;
  object-fit: contain;
  margin-bottom: 10px;
}
.promise-item .item-text {
  font-size: 14px;
  color: #3b0a55;
  text-align: center;
}
</style>

   {% elsif block.type == 'primal_queen_hero' %}
<style>
.ai-primal-queen-hero-{{ ai_gen_id }} {
    background-color: {{ block.settings.background_color }};
    {% if block.settings.background_image %}
      background-image: url('{{ block.settings.background_image | image_url: width: 1920 }}');
      background-size: contain;
      background-position: {{ block.settings.background_image_position }};
      background-repeat: no-repeat;
    {% endif %}
    padding: {{ block.settings.section_padding_top }}px 20px {{ block.settings.section_padding_bottom }}px;
    position: relative;
    overflow: hidden;
    width: 100%;
  }

  .ai-primal-queen-hero-{{ ai_gen_id }}::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
   background-image: url('{{ block.settings.background_image | image_url: width: 1920 }}');
    z-index: 1;
  }

  .ai-primal-queen-hero-{{ ai_gen_id }}::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: {{ block.settings.wave_height }}px;
    background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1200 120' preserveAspectRatio='none'%3E%3Cpath d='M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z' fill='%23ffeef3'/%3E%3C/svg%3E' fill='{{ block.settings.wave_color | remove: '#' | prepend: '%23' }}'/%3E%3C/svg%3E") no-repeat;
    background-size: cover;
    z-index: 3;
    transform: {% if block.settings.wave_flip %}rotateX(180deg){% else %}none{% endif %};
  }

  .ai-primal-queen-hero-container-{{ ai_gen_id }} {
    max-width: 1170px;
    margin: 0 auto;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 40px;
    align-items: center;
    position: relative;
    z-index: 2;
  }

  .ai-primal-queen-hero-content-{{ ai_gen_id }} {
    display: flex;
    flex-direction: column;
    gap: {{ block.settings.content_spacing }}px;
  }

  .ai-primal-queen-hero-logo-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-bottom: 20px;
  }

  .ai-primal-queen-hero-logo-image-{{ ai_gen_id }} {
    max-height: {{ block.settings.logo_size }}px;
    width: auto;
  }

  .ai-primal-queen-hero-logo-text-{{ ai_gen_id }} {
    font-family: {{ block.settings.logo_font.family }}, sans-serif;
    font-size: {{ block.settings.logo_text_size }}px;
    font-weight: 700;
    color: {{ block.settings.logo_color }};
    text-transform: uppercase;
    letter-spacing: 1px;
  }

  .ai-primal-queen-hero-crown-{{ ai_gen_id }} {
    width: {{ block.settings.crown_size }}px;
    height: {{ block.settings.crown_size }}px;
    fill: {{ block.settings.logo_color }};
  }

  .ai-primal-queen-hero-attention-{{ ai_gen_id }} {
    font-family: {{ block.settings.heading_font.family }}, sans-serif;
    font-size: {{ block.settings.attention_text_size }}px;
    font-weight: 700;
    color: {{ block.settings.attention_text_color }};
    line-height: 1.2;
    margin: 0;
  }

  .ai-primal-queen-hero-main-heading-{{ ai_gen_id }} {
    font-family: {{ block.settings.heading_font.family }}, sans-serif;
    font-size: {{ block.settings.main_heading_size }}px;
    font-weight: 700;
    line-height: 1.6;
    margin: 0;
    color: {{ block.settings.main_heading_pink_color }};
  }

  .ai-primal-queen-hero-main-heading-{{ ai_gen_id }} .purple-text {
    color: {{ block.settings.main_heading_purple_color }};
  }

  .ai-primal-queen-hero-button-{{ ai_gen_id }} {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    padding: {{ block.settings.button_padding_vertical }}px {{ block.settings.button_padding_horizontal }}px;
    border: none;
    border-radius: {{ block.settings.button_border_radius }}px;
    font-family: {{ block.settings.button_font.family }}, sans-serif;
    font-size: {{ block.settings.button_text_size }}px;
    font-weight: 700;
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: 1px;
    cursor: pointer;
    transition: all 0.3s ease;
    max-width: fit-content;
    flex-direction: row-reverse;
  }

  .ai-primal-queen-hero-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  }

  .ai-primal-queen-hero-button-crown-{{ ai_gen_id }} {
    width: 20px;
    height: 20px;
    fill: currentColor;
  }

  .ai-primal-queen-hero-guarantees-{{ ai_gen_id }} {
    display: flex;
    flex-direction: row;
    gap: 8px;
    margin-top: -20px;
  }

  .ai-primal-queen-hero-guarantee-{{ ai_gen_id }} {
    display: flex;
    align-items: center;
    gap: 8px;
    font-family: {{ block.settings.guarantee_font.family }}, sans-serif;
    font-size: {{ block.settings.guarantee_text_size }}px;
    color: {{ block.settings.guarantee_text_color }};
  }

  .ai-primal-queen-hero-check-{{ ai_gen_id }} {
    width: 16px;
    height: 16px;
    fill: {{ block.settings.guarantee_check_color }};
    flex-shrink: 0;
  }

  .ai-primal-queen-hero-testimonial-section-{{ ai_gen_id }} {
    margin-top: 0px;
  }

  .ai-primal-queen-hero-testimonial-slider-{{ ai_gen_id }} {
    position: relative;
    overflow: hidden;
  }

  .ai-primal-queen-hero-testimonial-{{ ai_gen_id }} {
    border: 2px solid {{ block.settings.testimonial_border_color }};
    border-radius: {{ block.settings.testimonial_border_radius }}px;
    padding: 20px;
    background-color: {{ block.settings.testimonial_background_color }};
    {% comment %} display: none; {% endcomment %}
  }

  .ai-primal-queen-hero-testimonial-{{ ai_gen_id }}.active {
    display: block;
  }
  .right-content-wrapper {
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
  }
  .ai-primal-queen-hero-testimonial-header-{{ ai_gen_id }} {
    display: flex;
    align-items: flex-start;
    gap: 12px;
    margin-bottom: 12px;
    {% comment %} flex-direction: column; {% endcomment %}
  }

  .ai-primal-queen-hero-testimonial-avatar-{{ ai_gen_id }} {
    width: {{ block.settings.testimonial_avatar_size }}px;
    height: {{ block.settings.testimonial_avatar_size }}px;
    border-radius: 50%;
    object-fit: cover;
    border: 2px solid {{ block.settings.testimonial_border_color }};
  }

  .ai-primal-queen-hero-testimonial-avatar-placeholder-{{ ai_gen_id }} {
    width: {{ block.settings.testimonial_avatar_size }}px;
    height: {{ block.settings.testimonial_avatar_size }}px;
    border-radius: 50%;
    background-color: #f0f0f0;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 2px solid {{ block.settings.testimonial_border_color }};
  }

  .ai-primal-queen-hero-testimonial-avatar-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.5;
  }

  .ai-primal-queen-hero-testimonial-info-{{ ai_gen_id }} {
    flex-grow: 1;
    width: 100%;
    display: flex;
    justify-content: space-between;
  }

  .ai-primal-queen-hero-testimonial-name-{{ ai_gen_id }} {
    font-family: {{ block.settings.testimonial_name_font.family }}, sans-serif;
    font-size: {{ block.settings.testimonial_name_size }}px;
    font-weight: 700;
    color: {{ block.settings.testimonial_name_color }};
    margin: 0 0 4px 0;
    display: flex;
    align-items: center;
    gap: 6px;
  }

  .ai-primal-queen-hero-verified-{{ ai_gen_id }} {
    width: 16px;
    height: 16px;
    fill: {{ block.settings.verified_check_color }};
  }

  .ai-primal-queen-hero-testimonial-stars-{{ ai_gen_id }} {
    display: flex;
    gap: 2px;
    margin-bottom: 8px;
  }

  .ai-primal-queen-hero-star-{{ ai_gen_id }} {
    width: 16px;
    height: 16px;
    fill: {{ block.settings.star_color }};
  }

  .ai-primal-queen-hero-testimonial-text-{{ ai_gen_id }} {
    font-family: {{ block.settings.testimonial_text_font.family }}, sans-serif;
    font-size: {{ block.settings.testimonial_text_size }}px;
    font-style: italic;
    color: {{ block.settings.testimonial_text_color }};
    line-height: 1.4;
    margin: 0;
  }

  .ai-primal-queen-hero-testimonial-dots-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 8px;
    margin-top: 16px;
  }

  .ai-primal-queen-hero-dot-{{ ai_gen_id }} {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background-color: {{ block.settings.dot_inactive_color }};
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .ai-primal-queen-hero-dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.dot_active_color }};
  }

  .ai-primal-queen-hero-media-{{ ai_gen_id }} {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    outline: 1px solid;
    width: fit-content;
       padding: 20px;
    border-radius: 259px;
    margin-left: 70px;
    max-height: 598px;
  }

  .ai-primal-queen-hero-oval-container-{{ ai_gen_id }} {
    position: relative;

   
    {% comment %} height: 666px; {% endcomment %}
    {% comment %} border: {{ block.settings.oval_border_width }}px solid {{ block.settings.oval_border_color }}; {% endcomment %}
    border-radius: 259px;
    overflow: hidden;
  }

  .ai-primal-queen-hero-splatter-{{ ai_gen_id }} {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 169%;
    height: 202%;
    background: radial-gradient(ellipse at center, {{ block.settings.splatter_color_1 }} 0%, {{ block.settings.splatter_color_2 }} 50%, transparent 70%);
    opacity: {{ block.settings.splatter_opacity | divided_by: 100.0 }};
    z-index: 1;
  }

  .ai-primal-queen-hero-media-content-{{ ai_gen_id }} {
    position: relative;
    z-index: 2;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .ai-primal-queen-hero-woman-image-{{ ai_gen_id }} {
    width: 80%;
    height: 70%;
    object-fit: cover;
    border-radius: 50%;
  }

  .ai-primal-queen-hero-woman-placeholder-{{ ai_gen_id }} {
    width: 80%;
    height: 70%;
    background-color: #f0f0f0;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .verify_mark_icon {
    width: 17px !important;
  }
  .ai-primal-queen-hero-woman-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.5;
  }
  .btn_wrapper::before {
    content: '';
        width: 15px;
        height: 15px;
        display: block;
        position: absolute;
        border: 2px solid #40A754;
        left: -5px;
        top: -5px;
        border-right: none;
        border-bottom: none;
}
.btn_wrapper::after{
    content: '';
        width: 15px;
        height: 15px;
        display: block;
        position: absolute;
        border: 2px solid #40A754;
        right: -7px;
        top: -7px;
        border-bottom: none;
        border-left: none;
    }
.btn_wrapper, .btn_wrapper_wrapper{
    position: relative;
    display: block;
    width: fit-content;
}
.btn_wrapper_wrapper::before {
    content: '';
        width: 15px;
        height: 15px;
        display: block;
        position: absolute;
        border: 2px solid #40A754;
        left: -5px;
        bottom: -5px;
        border-right: none;
        border-top: none;
}
.btn_wrapper_wrapper::after{
          content: '';
        width: 15px;
        height: 15px;
        display: block;
        position: absolute;
        border: 2px solid #40A754;
        right: -5px;
        bottom: -5px;
        border-left: none;
        border-top: none;
}
.btn_wrapper_wrapper a{
      box-shadow: 0 3px 3px 2px rgba(0, 0, 0, .2);
}
.btn_wrapper img::before{
    ontent: '';
        width: 15px;
        height: 15px;
        display: block;
        position: absolute;
        border: 2px solid #40A754;
        left: -7px;
        bottom: -7px;
        border-right: none;
        border-top: none;
}
  .ai-primal-queen-hero-video-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    border-radius: 0%;
    object-fit: contain;
    max-height:518px;
  }

  .ai-primal-queen-hero-one-week-{{ ai_gen_id }} {
    display: none;
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    background-color: {{ block.settings.one_week_background_color }};
    color: {{ block.settings.one_week_text_color }};
    padding: 8px 16px;
    border-radius: 20px;
    font-family: {{ block.settings.one_week_font.family }}, sans-serif;
    font-size: {{ block.settings.one_week_text_size }}px;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 1px;
    z-index: 3;
  }

  @media screen and (max-width: 768px) {
    .ai-primal-queen-hero-media-{{ ai_gen_id }}{
          margin-left: 0px !important;
    }
    .ai-primal-queen-hero-container-{{ ai_gen_id }}{
      display: flex;
      gap: 20px;
    }
    {% comment %} .btn_wrapper_wrapper { {% endcomment %}
      {% comment %} margin: 0 auto;
    } {% endcomment %}
    .ai-primal-queen-hero-logo-{{ ai_gen_id }}{
      text-align: center;
          {% comment %} justify-content: center; {% endcomment %}
    }
    .ai-primal-queen-hero-container-{{ ai_gen_id }} {
      grid-template-columns: 1fr;
      gap: 30px;
      {% comment %} text-align: center; {% endcomment %}
    }

    .ai-primal-queen-hero-attention-{{ ai_gen_id }} {
      font-size: {{ block.settings.attention_text_size | times: 0.8 }}px;
    }

    .ai-primal-queen-hero-main-heading-{{ ai_gen_id }} {
      font-size: {{ block.settings.main_heading_size | times: 0.7 }}px;
    }

    .ai-primal-queen-hero-oval-container-{{ ai_gen_id }} {
      width: {{ block.settings.oval_width | times: 0.8 }}px;
      height: {{ block.settings.oval_height | times: 0.8 }}px;
    }

    .ai-primal-queen-hero-guarantees-{{ ai_gen_id }} {
      align-items: center;
      {% comment %} justify-content: center; {% endcomment %}
      margin-top: -10px;
    }

    .ai-primal-queen-hero-{{ ai_gen_id }}::after {
      height: {{ block.settings.wave_height | times: 0.8 }}px;
    }
  }
  .ai-primal-queen-hero-media-{{ ai_gen_id }}.is-mobile{
    display: none;
  }
  @media screen and (max-width: 767px) {
    .ai-primal-queen-hero-content-{{ ai_gen_id }} {
      width: 100% !important;
    }
    .ai-primal-queen-hero-one-week-{{ ai_gen_id }} {
      display: none;
    }
    .btn_wrapper_wrapper {
      order: 7;
    }
    .ai-primal-queen-hero-media-{{ ai_gen_id }}.is-mobile{
      display: block;
              margin: 0 auto !important;
    }
    .ai-primal-queen-hero-media-{{ ai_gen_id }}{
      display: none;
    }
    .ai-primal-queen-hero-media-{{ ai_gen_id }} {
      padding: 25px;
    }
    .ai-primal-queen-hero-testimonial-text-{{ ai_gen_id }} {
      text-align: left;
    }
    .ai-primal-queen-hero-testimonial-name-{{ ai_gen_id }} {
      font-size: 12px;
    }
    .btn_wrapper_wrapper {
      margin: 0 auto;
    }
      .ai-primal-queen-hero-main-heading-{{ ai_gen_id }} {
        font-size: 26px !important;
        line-height: 35px;
    }
    .ai-primal-queen-hero-attention-{{ ai_gen_id }} {
        font-size: 17px !important;
    }
    .ai-primal-queen-hero-container-{{ ai_gen_id }} {
      flex-direction: column !important;
    }
   .ai-primal-queen-hero-guarantees-{{ ai_gen_id }} {
    justify-content: center;
    order: 8;
  }
  .ai-primal-queen-hero-container-{{ ai_gen_id }} {
    text-align: center;
  }
      .ai-primal-queen-hero-logo-{{ ai_gen_id }} {
        text-align: center;
        justify-content: center;
    }
  }
  @media screen and (max-width: 480px) {
    
    .ai-primal-queen-hero-{{ ai_gen_id }} {
      padding: {{ block.settings.section_padding_top | times: 0.7 }}px 15px {{ block.settings.section_padding_bottom | times: 0.7 }}px;
    }

    .ai-primal-queen-hero-attention-{{ ai_gen_id }} {
      font-size: {{ block.settings.attention_text_size | times: 0.6 }}px;
    }

    .ai-primal-queen-hero-main-heading-{{ ai_gen_id }} {
      font-size: {{ block.settings.main_heading_size | times: 0.5 }}px;
    }

    .ai-primal-queen-hero-oval-container-{{ ai_gen_id }} {
      {% comment %} width: {{ block.settings.oval_width | times: 0.6 }}px;
      height: {{ block.settings.oval_height | times: 0.6 }}px; {% endcomment %}
      width: 325px;
      height: 518px;
    }

    .ai-primal-queen-hero-{{ ai_gen_id }}::after {
      height: {{ block.settings.wave_height | times: 0.6 }}px;
    }
  }
  

.ai-primal-queen-hero-testimonial-slider-{{ ai_gen_id }} {
  position: relative;
  width: 100%;
  overflow: hidden;
  transition: height 0.4s ease;
}

.ai-primal-queen-hero-testimonial-wrapper-{{ ai_gen_id }} {
  display: flex;
  width: 100%;
  transition: transform 0.5s ease-in-out;
  will-change: transform;
}

.ai-primal-queen-hero-testimonial-{{ ai_gen_id }} {
  flex: 0 0 98%;
  width: 100%;
  box-sizing: border-box;
  margin: 0px 1%;
}

</style>

<primal-queen-hero-{{ ai_gen_id }} class="ai-primal-queen-hero-{{ ai_gen_id }}" {{ block.shopify_attributes }}>
  <div class="ai-primal-queen-hero-container-{{ ai_gen_id }}">
    <div class="ai-primal-queen-hero-content-{{ ai_gen_id }}">
      <div class="ai-primal-queen-hero-logo-{{ ai_gen_id }}">
        {% if block.settings.logo_image %}
          <img 
            src="{{ block.settings.logo_image | image_url: width: 200 }}" 
            alt="{{ block.settings.logo_text | escape }}"
            class="ai-primal-queen-hero-logo-image-{{ ai_gen_id }}"
            width="200"
            height="auto"
            loading="lazy"
          >
        {% endif %}
      </div>
      
      {% if block.settings.attention_text != blank %}
        <div class="ai-primal-queen-hero-attention-{{ ai_gen_id }}">{{ block.settings.attention_text }}</div>
      {% endif %}

      {% if block.settings.main_heading != blank %}
        <h1 class="ai-primal-queen-hero-main-heading-{{ ai_gen_id }}">
          {{ block.settings.main_heading | replace: '[purple]', '<span class="purple-text">' | replace: '[/purple]', '</span>' }}
        </h1>
      {% endif %}

      {% if block.settings.video_url != blank %}
              <div class="ai-primal-queen-hero-media-{{ ai_gen_id }} is-mobile">
      <div class="ai-primal-queen-hero-oval-container-{{ ai_gen_id }}">
        <div class="ai-primal-queen-hero-splatter-{{ ai_gen_id }}"></div>
        <div class="ai-primal-queen-hero-media-content-{{ ai_gen_id }}">
          {% if block.settings.video_url != blank %}
            <video 
              class="ai-primal-queen-hero-video-{{ ai_gen_id }}"
              autoplay
              muted
              loop
              playsinline
            >
              <source src="{{ block.settings.video_url }}" type="video/mp4">
            </video>
          {% elsif block.settings.woman_image %}
            <img 
              src="{{ block.settings.woman_image | image_url: width: 600 }}" 
              alt="Woman drinking water"
              class="ai-primal-queen-hero-woman-image-{{ ai_gen_id }}"
              width="600"
              height="600"
              loading="lazy"
            >
          {% else %}
            <div class="ai-primal-queen-hero-woman-placeholder-{{ ai_gen_id }}">
              {{ 'image' | placeholder_svg_tag }}
            </div>
          {% endif %}
          {% if block.settings.show_one_week_text %}
            <div class="ai-primal-queen-hero-one-week-{{ ai_gen_id }}">{{ block.settings.one_week_text }}</div>
          {% endif %}
        </div>
      </div>
    </div>
    {% endif %}

      {% if block.settings.button_text != blank %}
       <div class="btn_wrapper_wrapper">
        <div class="btn_wrapper">
          <a href="{{ block.settings.button_link }}" class="ai-primal-queen-hero-button-{{ ai_gen_id }}">
            {% if block.settings.show_crown_button %}
              {% comment %} <svg class="ai-primal-queen-hero-button-crown-{{ ai_gen_id }}" viewBox="0 0 24 24">
                <path d="M5 16L3 5l5.5 5L12 4l3.5 6L21 5l-2 11H5zm2.7-2h8.6l.9-5.4-2.1 1.7L12 8l-3.1 2.3-2.1-1.7L7.7 14z"/>
              </svg> {% endcomment %}

              <img src="{{ block.settings.button_crown_icon | image_url }}" class="button_crown_icon" width="20px" height="20px" style="width:20px;">
            {% endif %}
            {{ block.settings.button_text }}
          </a>
        </div>  
      </div>    
      {% endif %}

      <div class="ai-primal-queen-hero-guarantees-{{ ai_gen_id }}">
        {% if block.settings.guarantee_1_text != blank %}
          <div class="ai-primal-queen-hero-guarantee-{{ ai_gen_id }}">
            <svg class="ai-primal-queen-hero-check-{{ ai_gen_id }}" viewBox="0 0 24 24">
              <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"/>
            </svg>
            <span>{{ block.settings.guarantee_1_text }}</span>
          </div>
        {% endif %}
        {% if block.settings.guarantee_2_text != blank %}
          <div class="ai-primal-queen-hero-guarantee-{{ ai_gen_id }}">
            <svg class="ai-primal-queen-hero-check-{{ ai_gen_id }}" viewBox="0 0 24 24">
              <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z"/>
            </svg>
            <span>{{ block.settings.guarantee_2_text }}</span>
          </div>
        {% endif %}
      </div>

      <div class="ai-primal-queen-hero-testimonial-section-{{ ai_gen_id }}">
        <div class="ai-primal-queen-hero-testimonial-slider-{{ ai_gen_id }}">
          {% for i in (1..5) %}
            {% liquid
              assign testimonial_text_key = 'testimonial_' | append: i | append: '_text'
              assign testimonial_name_key = 'testimonial_' | append: i | append: '_name'
              assign testimonial_avatar_key = 'testimonial_' | append: i | append: '_avatar'
              assign testimonial_rating_key = 'testimonial_' | append: i | append: '_rating'

              assign testimonial_text = block.settings[testimonial_text_key]
              assign testimonial_name = block.settings[testimonial_name_key]
              assign testimonial_avatar = block.settings[testimonial_avatar_key]
              assign testimonial_rating = block.settings[testimonial_rating_key]
            %}

            {% if testimonial_text != blank and testimonial_name != blank %}
              <div class="ai-primal-queen-hero-testimonial-{{ ai_gen_id }} {% if forloop.first %}active{% endif %}" data-testimonial="{{ forloop.index }}">
                <div class="ai-primal-queen-hero-testimonial-header-{{ ai_gen_id }}">
                  {% if testimonial_avatar %}
                    <img 
                      src="{{ testimonial_avatar | image_url: width: 100 }}" 
                      alt="{{ testimonial_name | escape }}"
                      class="ai-primal-queen-hero-testimonial-avatar-{{ ai_gen_id }}"
                      width="100"
                      height="100"
                      loading="lazy"
                    >
                  {% else %}
                    <div class="ai-primal-queen-hero-testimonial-avatar-placeholder-{{ ai_gen_id }}">
                      {{ 'image' | placeholder_svg_tag }}
                    </div>
                  {% endif %}
                  
                    <div class="right-content-wrapper">
                       <p class="ai-primal-queen-hero-testimonial-text-{{ ai_gen_id }}">{{ testimonial_text }}</p>
                        <div class="ai-primal-queen-hero-testimonial-info-{{ ai_gen_id }}">
                          <h3 class="ai-primal-queen-hero-testimonial-name-{{ ai_gen_id }}">
                            {{ testimonial_name }}
                            {% if block.settings.show_verified_checkmark %}
                              <img src="{{ block.settings.verify_mark_icon | image_url }}" width="17px" height="17px" class="verify_mark_icon">
                            {% endif %}
                          </h3>
                          <div class="ai-primal-queen-hero-testimonial-stars-{{ ai_gen_id }}">
                            {% for star in (1..5) %}
                              <svg class="ai-primal-queen-hero-star-{{ ai_gen_id }}" viewBox="0 0 24 24" {% if star > testimonial_rating %}style="opacity: 0.3;"{% endif %}>
                                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                              </svg>
                            {% endfor %}
                          </div>
                        </div>
                    </div>

                </div>
                
              </div>
            {% endif %}
          {% endfor %}
        </div>

        <div class="ai-primal-queen-hero-testimonial-dots-{{ ai_gen_id }}">
          {% for i in (1..5) %}
            {% liquid
              assign testimonial_text_key = 'testimonial_' | append: i | append: '_text'
              assign testimonial_name_key = 'testimonial_' | append: i | append: '_name'
              assign testimonial_text = block.settings[testimonial_text_key]
              assign testimonial_name = block.settings[testimonial_name_key]
            %}
            {% if testimonial_text != blank and testimonial_name != blank %}
              <div class="ai-primal-queen-hero-dot-{{ ai_gen_id }} {% if forloop.first %}active{% endif %}" data-dot="{{ forloop.index }}"></div>
            {% endif %}
          {% endfor %}
        </div>
      </div>
    </div>

    <div class="ai-primal-queen-hero-media-{{ ai_gen_id }}">
      <div class="ai-primal-queen-hero-oval-container-{{ ai_gen_id }}">
        <div class="ai-primal-queen-hero-splatter-{{ ai_gen_id }}"></div>
        <div class="ai-primal-queen-hero-media-content-{{ ai_gen_id }}">
          {% if block.settings.video_url != blank %}
            <video 
              class="ai-primal-queen-hero-video-{{ ai_gen_id }}"
              autoplay
              muted
              loop
              playsinline
            >
              <source src="{{ block.settings.video_url }}" type="video/mp4">
            </video>
          {% elsif block.settings.woman_image %}
            <img 
              src="{{ block.settings.woman_image | image_url: width: 600 }}" 
              alt="Woman drinking water"
              class="ai-primal-queen-hero-woman-image-{{ ai_gen_id }}"
              width="600"
              height="600"
              loading="lazy"
            >
          {% else %}
            <div class="ai-primal-queen-hero-woman-placeholder-{{ ai_gen_id }}">
              {{ 'image' | placeholder_svg_tag }}
            </div>
          {% endif %}
          {% if block.settings.show_one_week_text %}
            <div class="ai-primal-queen-hero-one-week-{{ ai_gen_id }}">{{ block.settings.one_week_text }}</div>
          {% endif %}
        </div>
      </div>
    </div>
  </div>
</primal-queen-hero-{{ ai_gen_id }}>
<script>
  (function () {
    class PrimalQueenHero{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentTestimonial = 1; // Start at 1 because 0 is the cloned last
        this.testimonials = [];
        this.dots = [];
        this.autoSlideInterval = null;

        // Drag/swipe
        this.isDragging = false;
        this.startX = 0;
        this.movedBy = 0;
      }

      connectedCallback() {
        const slider = this.querySelector('.ai-primal-queen-hero-testimonial-slider-{{ ai_gen_id }}');
        this.originalTestimonials = Array.from(this.querySelectorAll('.ai-primal-queen-hero-testimonial-{{ ai_gen_id }}'));
        this.dots = Array.from(this.querySelectorAll('.ai-primal-queen-hero-dot-{{ ai_gen_id }}'));
        this.testimonialCount = this.originalTestimonials.length;

        // Create wrapper
        let wrapper = slider.querySelector('.ai-primal-queen-hero-testimonial-wrapper-{{ ai_gen_id }}');
        if (!wrapper) {
          wrapper = document.createElement('div');
          wrapper.className = 'ai-primal-queen-hero-testimonial-wrapper-{{ ai_gen_id }}';
          slider.appendChild(wrapper);
        }
        this.wrapper = wrapper;

        // Clone slides for infinite effect
        const firstClone = this.originalTestimonials[0].cloneNode(true);
        const lastClone = this.originalTestimonials[this.testimonialCount - 1].cloneNode(true);

        wrapper.appendChild(firstClone);
        this.originalTestimonials.forEach(t => wrapper.appendChild(t));
        wrapper.insertBefore(lastClone, wrapper.firstChild);

        // Now set full testimonial list including clones
        this.testimonials = Array.from(wrapper.children);

        // Initial position (first actual testimonial)
        this.setWrapperTransition(false);
        this.setTranslateX(this.currentTestimonial);
        this.updateSliderHeight();

        if (this.testimonialCount > 1) {
          this.setupEventListeners();
          this.setupDrag();
          this.startAutoSlide();
        }
      }

      disconnectedCallback() {
        if (this.autoSlideInterval) clearInterval(this.autoSlideInterval);
      }

      setWrapperTransition(enable) {
        this.wrapper.style.transition = enable ? 'transform 0.5s ease-in-out' : 'none';
      }

      setTranslateX(index) {
        const offset = -index * 100;
        this.wrapper.style.transform = `translateX(${offset}%)`;
      }

      showTestimonial(index) {
        this.setWrapperTransition(true);
        this.setTranslateX(index);
        this.currentTestimonial = index;
        this.updateDots();
        this.updateSliderHeight();
      }

      updateDots() {
        const realIndex = (this.currentTestimonial - 1 + this.testimonialCount) % this.testimonialCount;
        this.dots.forEach((d, i) => d.classList.toggle('active', i === realIndex));
      }

      updateSliderHeight() {
        const activeSlide = this.testimonials[this.currentTestimonial];
        const sliderContainer = this.querySelector('.ai-primal-queen-hero-testimonial-slider-{{ ai_gen_id }}');
        if (activeSlide && sliderContainer) {
          const newHeight = activeSlide.offsetHeight;
          sliderContainer.style.height = newHeight + 'px';
        }
      }

      nextTestimonial() {
        if (this.currentTestimonial >= this.testimonialCount) {
          this.showTestimonial(this.currentTestimonial + 1);
          setTimeout(() => {
            this.setWrapperTransition(false);
            this.currentTestimonial = 1;
            this.setTranslateX(this.currentTestimonial);
            this.updateDots();
            this.updateSliderHeight();
          }, 510);
        } else {
          this.showTestimonial(this.currentTestimonial + 1);
        }
      }

      prevTestimonial() {
        if (this.currentTestimonial <= 0) {
          this.showTestimonial(this.currentTestimonial - 1);
          setTimeout(() => {
            this.setWrapperTransition(false);
            this.currentTestimonial = this.testimonialCount;
            this.setTranslateX(this.currentTestimonial);
            this.updateDots();
            this.updateSliderHeight();
          }, 510);
        } else {
          this.showTestimonial(this.currentTestimonial - 1);
        }
      }

      startAutoSlide() {
        this.autoSlideInterval = setInterval(() => {
          this.nextTestimonial();
        }, {{ block.settings.testimonial_auto_slide_duration | times: 10000 }});
      }

      resetAutoSlide() {
        if (this.autoSlideInterval) {
          clearInterval(this.autoSlideInterval);
          this.startAutoSlide();
        }
      }

      setupEventListeners() {
        this.dots.forEach((dot, i) => {
          dot.addEventListener('click', () => {
            this.showTestimonial(i + 1); // Because 0 is the cloned last slide
            this.resetAutoSlide();
          });
        });
      }

      setupDrag() {
        const container = this.querySelector('.ai-primal-queen-hero-testimonial-slider-{{ ai_gen_id }}');

        container.addEventListener('mousedown', this.dragStart.bind(this));
        container.addEventListener('mousemove', this.dragMove.bind(this));
        container.addEventListener('mouseup', this.dragEnd.bind(this));
        container.addEventListener('mouseleave', this.dragEnd.bind(this));

        container.addEventListener('touchstart', this.dragStart.bind(this), { passive: true });
        container.addEventListener('touchmove', this.dragMove.bind(this), { passive: true });
        container.addEventListener('touchend', this.dragEnd.bind(this));
      }

      dragStart(event) {
        this.isDragging = true;
        this.startX = event.type.includes('mouse') ? event.pageX : event.touches[0].clientX;
        this.movedBy = 0;
        this.setWrapperTransition(false);
        this.resetAutoSlide();
      }

      dragMove(event) {
        if (!this.isDragging) return;
        const currentX = event.type.includes('mouse') ? event.pageX : event.touches[0].clientX;
        this.movedBy = currentX - this.startX;

        const percentage = (this.movedBy / this.offsetWidth) * 100;
        const offset = -this.currentTestimonial * 100 + percentage;
        this.wrapper.style.transform = `translateX(${offset}%)`;
      }

      dragEnd() {
        if (!this.isDragging) return;
        this.isDragging = false;
        this.setWrapperTransition(true);

        if (this.movedBy < -50) {
          this.nextTestimonial();
        } else if (this.movedBy > 50) {
          this.prevTestimonial();
        } else {
          this.showTestimonial(this.currentTestimonial); // snap back
        }
      }
    }

    customElements.define('primal-queen-hero-{{ ai_gen_id }}', PrimalQueenHero{{ ai_gen_id }});
  })();
</script>


{% elsif block.type == 'founder_story' %}
      <!-- Founder Story Block -->
      <style>
        .founder-story-{{ block.id }} {
          display: flex;
          justify-content: space-between;
          align-items: center;
          padding: {{ block.settings.section_padding_top }}px 20px {{ block.settings.section_padding_bottom }}px;
          max-width: 1170px;
          margin: 0 auto;
          background-color: {{ block.settings.background_color }};
        }
        .founder-content-wrapper-{{ block.id }} {
          display: flex;
          gap: 40px;
          flex-wrap: wrap;
          width: 100%;
          align-items: center;
        }
        .founder-image-side-{{ block.id }} {
          flex: 1 1 25%;
          min-width: 300px;
          position: relative;
        }
        .founder-image-container-{{ block.id }} {
          border-radius: 20px;
          position: relative;
          overflow: hidden;
        }
        .founder-image-container-{{ block.id }} img {
          width: 100%;
          border-radius: 10px;
          display: block;
        }
        .founder-badge-{{ block.id }} {
          background: {{ block.settings.badge_background_color }};
          color: {{ block.settings.badge_text_color }};
          padding: 15px 30px;
          text-align: center;
          border-radius: 0 0 20px 20px;
          position: absolute;
          bottom: 0;
          left: 0;
          right: 0;
        }
        .founder-badge-{{ block.id }} .name {
          font-size: {{ block.settings.badge_name_size }}px;
          font-weight: 700;
          margin: 0;
        }
        .founder-badge-{{ block.id }} .title {
          font-size: {{ block.settings.badge_title_size }}px;
          font-weight: 500;
          margin: 5px 0 0;
          text-transform: uppercase;
          letter-spacing: 1px;
        }
        .founder-text-side-{{ block.id }} {
          flex: 1 1 50%;
          min-width: 300px;
        }
        .founder-text-side-{{ block.id }} h2 {
          font-size: {{ block.settings.heading_font_size }}px;
          color: {{ block.settings.heading_color }};
          margin-bottom: 10px;
          font-weight: 700;
          line-height: 1.2;
          
        }
        .founder-text-side-{{ block.id }} h3 {
          font-size: {{ block.settings.subheading_font_size }}px;
          color: {{ block.settings.subheading_color }};
          font-weight: 700;
          line-height: 1.2;
        }
        .founder-text-side-{{ block.id }} .intro-text {
          font-size: {{ block.settings.intro_text_size }}px;
          color: {{ block.settings.text_color }};
          margin-bottom: 20px;
          font-weight: 500;
        }
        .founder-problems-list-{{ block.id }} {
          display: grid;
          grid-template-columns: 1fr 1fr;
          gap: 15px;
          margin-bottom: 20px;
        }
        .problem-item-{{ block.id }} {
          display: flex;
          align-items: center;
          gap: 10px;
          font-size: {{ block.settings.problem_text_size }}px;
          color: {{ block.settings.text_color }};
          font-weight: 500;
        }
        .problem-item-{{ block.id }} .icon {
          color: {{ block.settings.icon_color }};
          font-size: 18px;
          flex-shrink: 0;
        }
        .founder-text-side-{{ block.id }} .closing-text {
          font-size: {{ block.settings.closing_text_size }}px;
          color: {{ block.settings.text_color }};
          font-weight: 600;
          margin-top: 15px;
        }
        .decorative-elements-{{ block.id }} {
          position: absolute;
          top: -20px;
          left: -30px;
          pointer-events: none;
        }
        .decorative-elements-{{ block.id }} .splash {
          width: 80px;
          height: 80px;
          background: {{ block.settings.splash_color }};
          border-radius: 50% 20% 50% 20%;
          opacity: 0.3;
          position: absolute;
        }
        .decorative-elements-{{ block.id }} .splash:nth-child(2) {
          width: 50px;
          height: 50px;
          top: 40px;
          left: 20px;
          opacity: 0.4;
        }
        .decorative-elements-{{ block.id }} .splash:nth-child(3) {
          width: 30px;
          height: 30px;
          top: 80px;
          left: -10px;
          opacity: 0.5;
        }
        @media (max-width: 768px) {
          .founder-story-{{ block.id }} {
            padding: 40px 20px;
          }
          .founder-content-wrapper-{{ block.id }} {
            flex-direction: column;
            gap: 30px;
          }
          .founder-problems-list-{{ block.id }} {
            grid-template-columns: 1fr;
          }
          .founder-text-side-{{ block.id }} h2 {
            font-size: calc({{ block.settings.heading_font_size }}px * 0.8);
          }
          .founder-text-side-{{ block.id }} h3 {
            font-size: calc({{ block.settings.subheading_font_size }}px * 0.8);
          }
        }
      </style>
      <div class="founder-story-{{ block.id }}" {{ block.shopify_attributes }}>
        <div class="founder-content-wrapper-{{ block.id }}">
          <div class="founder-image-side-{{ block.id }}">
            <div class="decorative-elements-{{ block.id }}">
              <div class="splash"></div>
              <div class="splash"></div>
              <div class="splash"></div>
            </div>
            <div class="founder-image-container-{{ block.id }}">
              {% if block.settings.founder_image != blank %}
                <img src="{{ block.settings.founder_image | img_url: '600x600' }}" alt="{{ block.settings.founder_name }}" loading="lazy" />
              {% else %}
                <div style="background: #f0f0f0; padding: 100px 20px; text-align: center; border-radius: 10px;">
                  <p style="color: #999;">Upload founder image</p>
                </div>
              {% endif %}
              <div class="founder-badge-{{ block.id }}">
                <p class="name">{{ block.settings.founder_name | default: "Shelby" }}</p>
                <p class="title">{{ block.settings.founder_title | default: "FOUNDER OF PRIMAL QUEEN!" }}</p>
              </div>
            </div>
          </div>
          <div class="founder-text-side-{{ block.id }}">
            {% if block.settings.heading_text != blank %}
              <h2>{{ block.settings.heading_text }}</h2>
            {% endif %}
            
            {% if block.settings.subheading_text != blank %}
              <h3>{{ block.settings.subheading_text }}</h3>
            {% endif %}
            
            {% if block.settings.intro_text != blank %}
              <p class="intro-text">{{ block.settings.intro_text }}</p>
            {% endif %}
            
            <div class="founder-problems-list-{{ block.id }}">
              {% if block.settings.problem_1 != blank %}
                <div class="problem-item-{{ block.id }}">
                  <span class="icon">✕</span>
                  <span>{{ block.settings.problem_1 }}</span>
                </div>
              {% endif %}
              
              {% if block.settings.problem_2 != blank %}
                <div class="problem-item-{{ block.id }}">
                  <span class="icon">✕</span>
                  <span>{{ block.settings.problem_2 }}</span>
                </div>
              {% endif %}
              
              {% if block.settings.problem_3 != blank %}
                <div class="problem-item-{{ block.id }}">
                  <span class="icon">✕</span>
                  <span>{{ block.settings.problem_3 }}</span>
                </div>
              {% endif %}
              
              {% if block.settings.problem_4 != blank %}
                <div class="problem-item-{{ block.id }}">
                  <span class="icon">✕</span>
                  <span>{{ block.settings.problem_4 }}</span>
                </div>
              {% endif %}
            </div>
            
            {% if block.settings.closing_text != blank %}
              <p class="closing-text">{{ block.settings.closing_text }}</p>
            {% endif %}
          </div>
        </div>
      </div>
    {% endif %}
  {% endfor %}
</div>